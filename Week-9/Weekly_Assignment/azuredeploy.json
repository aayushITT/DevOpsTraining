{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "eastus",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B1s",
            "metadata": {
                "description": "Size of the virtual machine."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Admin username for the VM."
            }
        },
        "adminPublicKey": {
            "type": "string",
            "metadata": {
                "description": "SSH public key for the VM."
            }
        }
    },
    "functions": [],
    "variables": {
        "networkSecurityGroupName": "demoNSG",
        "publicIPAddressName1": "demoVM1PublicIP",
        "publicIPAddressName2": "demoVM2PublicIP",
        "publicIPAddressName3": "demoAppGAtewayPublicIP",
        "vNetName": "demoVNet",
        "vNetSubnetName": "demoVNetPublicSubnet",
        "vNetApplicationGatewaySubnetName": "demoVNetApplicationGatewaySubnet",
        "networkInterfaceName1": "demoNIC1",
        "networkInterfaceName2": "demoNIC2",
        "vmName1": "demoVM1",
        "vmName2": "demoVM2",
        "vNetAddressPrefixes": "10.0.0.0/16",
        "vNetSubnetAddressPrefix": "10.0.0.0/24",
        "vNetApplicationGatewayAddressPrefix": "10.0.1.0/24",
        "appGatewayName": "demoApplicationGateway",
        "gatewayIPConfigName": "demoGatewayIPConfig",
        "appGatewayFrontendIPName": "demoAppGatewayFrontendIP",
        "appGatewayFrontendPortName": "demoAppGatewayFrontendPort",
        "vm1AppGatewayBackendPoolName": "demoVM1AppGatewayBackendPool",
        "vm2AppGatewayBackendPoolName": "demoVM2AppGatewayBackendPool",
        "appGatewayBackendHttpSettingsName": "demoAppGatewayBackendHttpSettings",
        "pathBasedRuleMapName": "demoPathBasedRuleMap",
        "appGatewayHttpListenerName": "demoAppGatewayHttpListener",
        "ruleName": "demoRule"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-03-01",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow-AppGateway-Inbound",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRanges": [
                                "65200-65535"
                            ],
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "description": "Allow inbound traffic on ports 65200-65535 for Application Gateway V2"
                        }
                    },
                    {
                        "name": "ssh_rule",
                        "properties": {
                            "description": "Locks inbound down to ssh default port 22.",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "http_rule",
                        "properties": {
                            "description": "Locks inbound down to http default port 80.",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-03-01",
            "name": "[variables('vNetName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vNetAddressPrefixes')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vNetSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('vNetSubnetAddressPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('vNetApplicationGatewaySubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('vNetApplicationGatewayAddressPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-03-01",
            "name": "[variables('publicIPAddressName1')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            },
            "sku": {
                "name": "Basic"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2024-03-01",
            "name": "[variables('networkInterfaceName1')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName1'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "10.0.0.4",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName1'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNetName'), variables('vNetSubnetName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2024-07-01",
            "name": "[variables('vmName1')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName1'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmName1')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "customData": "[base64(concat('#!/bin/bash\n', 'apt-get update\n', 'apt-get install -y apache2\n', 'hostname=$(hostname)\n', 'private_ip=$(hostname -I | awk ''{print $1}'')\n', 'echo \"<html><body><h1>This is $hostname</h1><p>Private IP: $private_ip</p></body></html>\" > /var/www/html/index.html\n'))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "0001-com-ubuntu-server-jammy",
                        "sku": "22_04-lts-gen2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "fromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName1'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-03-01",
            "name": "[variables('publicIPAddressName2')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            },
            "sku": {
                "name": "Basic"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2024-03-01",
            "name": "[variables('networkInterfaceName2')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName2'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "10.0.0.5",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName2'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNetName'), variables('vNetSubnetName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2024-07-01",
            "name": "[variables('vmName2')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName2'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmName2')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "customData": "[base64(concat('#!/bin/bash\n', 'apt-get update\n', 'apt-get install -y apache2\n', 'hostname=$(hostname)\n', 'private_ip=$(hostname -I | awk ''{print $1}'')\n', 'echo \"<html><body><h1>This is $hostname</h1><p>Private IP: $private_ip</p></body></html>\" > /var/www/html/index.html\n'))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "0001-com-ubuntu-server-jammy",
                        "sku": "22_04-lts-gen2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "fromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName2'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-03-01",
            "name": "[variables('publicIPAddressName3')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "sku": {
                "name": "Standard"
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2024-03-01",
            "name": "[variables('appGatewayName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName3'))]"
            ],
            "properties": {
                "sku": {
                    "name": "Standard_v2",
                    "tier": "Standard_v2",
                    "capacity": 2
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "[variables('gatewayIPConfigName')]",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNetName'), variables('vNetApplicationGatewaySubnetName'))]"
                            }
                        }
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('appGatewayFrontendIPName')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName3'))]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "[variables('appGatewayFrontendPortName')]",
                        "properties": {
                            "port": 80
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('vm1AppGatewayBackendPoolName')]",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "ipAddress": "10.0.0.4"
                                }
                            ]
                        }
                    },
                    {
                        "name": "[variables('vm2AppGatewayBackendPoolName')]",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "ipAddress": "10.0.0.5"
                                }
                            ]
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "[variables('appGatewayBackendHttpSettingsName')]",
                        "properties": {
                            "port": 80,
                            "protocol": "Http",
                            "cookieBasedAffinity": "Disabled"
                        }
                    }
                ],
                "urlPathMaps": [
                    {
                        "name": "[variables('pathBasedRuleMapName')]",
                        "properties": {
                            "defaultBackendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', variables('appGatewayName'), variables('vm1AppGatewayBackendPoolName'))]"
                            },
                            "defaultBackendHttpSettings": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', variables('appGatewayName'), variables('appGatewayBackendHttpSettingsName'))]"
                            },
                            "pathRules": [
                                {
                                    "name": "vm1path",
                                    "properties": {
                                        "paths": [ "/vm1" ],
                                        "backendAddressPool": {
                                            "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', variables('appGatewayName'), variables('vm1AppGatewayBackendPoolName'))]"
                                        },
                                        "backendHttpSettings": {
                                            "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', variables('appGatewayName'), variables('appGatewayBackendHttpSettingsName'))]"
                                        }
                                    }
                                },
                                {
                                    "name": "vm2path",
                                    "properties": {
                                        "paths": [ "/vm2" ],
                                        "backendAddressPool": {
                                            "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', variables('appGatewayName'), variables('vm2AppGatewayBackendPoolName'))]"
                                        },
                                        "backendHttpSettings": {
                                            "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', variables('appGatewayName'), variables('appGatewayBackendHttpSettingsName'))]"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "[variables('appGatewayHttpListenerName')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', variables('appGatewayName'), variables('appGatewayFrontendIPName'))]"
                            },
                            "frontendPort": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts',  variables('appGatewayName'), variables('appGatewayFrontendPortName'))]"
                            },
                            "protocol": "Http",
                            "sslCertificate": null
                        }
                    }
                ],
                "requestRoutingRules": [
                    {
                        "name": "[variables('ruleName')]",
                        "properties": {
                            "priority": 10,
                            "ruleType": "PathBasedRouting",
                            "httpListener": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', variables('appGatewayName'), variables('appGatewayHttpListenerName'))]"
                            },
                            "urlPathMap": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/urlPathMaps', variables('appGatewayName'), variables('pathBasedRuleMapName'))]"
                            }
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {}
}